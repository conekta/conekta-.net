/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Conekta.net.Client.OpenAPIDateConverter;

namespace Conekta.net.Model
{
    /// <summary>
    /// CustomersDataResponse
    /// </summary>
    [DataContract(Name = "customers_data_response")]
    public partial class CustomersDataResponse : IEquatable<CustomersDataResponse>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CustomersDataResponse" /> class.
        /// </summary>
        /// <param name="antifraudInfo">antifraudInfo.</param>
        /// <param name="corporate">corporate.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="customReference">customReference.</param>
        /// <param name="defaultFiscalEntityId">defaultFiscalEntityId.</param>
        /// <param name="defaultShippingContactId">defaultShippingContactId.</param>
        /// <param name="defaultPaymentSourceId">defaultPaymentSourceId.</param>
        /// <param name="email">email.</param>
        /// <param name="id">id.</param>
        /// <param name="livemode">livemode.</param>
        /// <param name="name">name.</param>
        /// <param name="_object">_object.</param>
        /// <param name="paymentSources">paymentSources.</param>
        /// <param name="phone">phone.</param>
        /// <param name="fiscalEntities">fiscalEntities.</param>
        /// <param name="shippingContacts">shippingContacts.</param>
        public CustomersDataResponse(CustomersAntifraudInfoResponse antifraudInfo = default(CustomersAntifraudInfoResponse), bool corporate = default(bool), long createdAt = default(long), string customReference = default(string), string defaultFiscalEntityId = default(string), string defaultShippingContactId = default(string), string defaultPaymentSourceId = default(string), string email = default(string), string id = default(string), bool livemode = default(bool), string name = default(string), string _object = default(string), CustomersDataResponsePaymentSources paymentSources = default(CustomersDataResponsePaymentSources), string phone = default(string), CustomerFiscalEntitiesResponse fiscalEntities = default(CustomerFiscalEntitiesResponse), CustomersShippingContactsResponse shippingContacts = default(CustomersShippingContactsResponse))
        {
            this.AntifraudInfo = antifraudInfo;
            this.Corporate = corporate;
            this.CreatedAt = createdAt;
            this.CustomReference = customReference;
            this.DefaultFiscalEntityId = defaultFiscalEntityId;
            this.DefaultShippingContactId = defaultShippingContactId;
            this.DefaultPaymentSourceId = defaultPaymentSourceId;
            this.Email = email;
            this.Id = id;
            this.Livemode = livemode;
            this.Name = name;
            this.Object = _object;
            this.PaymentSources = paymentSources;
            this.Phone = phone;
            this.FiscalEntities = fiscalEntities;
            this.ShippingContacts = shippingContacts;
        }

        /// <summary>
        /// Gets or Sets AntifraudInfo
        /// </summary>
        [DataMember(Name = "antifraud_info", EmitDefaultValue = true)]
        public CustomersAntifraudInfoResponse AntifraudInfo { get; set; }

        /// <summary>
        /// Gets or Sets Corporate
        /// </summary>
        [DataMember(Name = "corporate", EmitDefaultValue = true)]
        public bool Corporate { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name = "created_at", EmitDefaultValue = false)]
        public long CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets CustomReference
        /// </summary>
        [DataMember(Name = "custom_reference", EmitDefaultValue = false)]
        public string CustomReference { get; set; }

        /// <summary>
        /// Gets or Sets DefaultFiscalEntityId
        /// </summary>
        [DataMember(Name = "default_fiscal_entity_id", EmitDefaultValue = true)]
        public string DefaultFiscalEntityId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultShippingContactId
        /// </summary>
        [DataMember(Name = "default_shipping_contact_id", EmitDefaultValue = false)]
        public string DefaultShippingContactId { get; set; }

        /// <summary>
        /// Gets or Sets DefaultPaymentSourceId
        /// </summary>
        [DataMember(Name = "default_payment_source_id", EmitDefaultValue = true)]
        public string DefaultPaymentSourceId { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name = "email", EmitDefaultValue = false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets Livemode
        /// </summary>
        [DataMember(Name = "livemode", EmitDefaultValue = true)]
        public bool Livemode { get; set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name = "name", EmitDefaultValue = false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        [DataMember(Name = "object", EmitDefaultValue = false)]
        public string Object { get; set; }

        /// <summary>
        /// Gets or Sets PaymentSources
        /// </summary>
        [DataMember(Name = "payment_sources", EmitDefaultValue = false)]
        public CustomersDataResponsePaymentSources PaymentSources { get; set; }

        /// <summary>
        /// Gets or Sets Phone
        /// </summary>
        [DataMember(Name = "phone", EmitDefaultValue = false)]
        public string Phone { get; set; }

        /// <summary>
        /// Gets or Sets FiscalEntities
        /// </summary>
        [DataMember(Name = "fiscal_entities", EmitDefaultValue = false)]
        public CustomerFiscalEntitiesResponse FiscalEntities { get; set; }

        /// <summary>
        /// Gets or Sets ShippingContacts
        /// </summary>
        [DataMember(Name = "shipping_contacts", EmitDefaultValue = false)]
        public CustomersShippingContactsResponse ShippingContacts { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CustomersDataResponse {\n");
            sb.Append("  AntifraudInfo: ").Append(AntifraudInfo).Append("\n");
            sb.Append("  Corporate: ").Append(Corporate).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  CustomReference: ").Append(CustomReference).Append("\n");
            sb.Append("  DefaultFiscalEntityId: ").Append(DefaultFiscalEntityId).Append("\n");
            sb.Append("  DefaultShippingContactId: ").Append(DefaultShippingContactId).Append("\n");
            sb.Append("  DefaultPaymentSourceId: ").Append(DefaultPaymentSourceId).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Livemode: ").Append(Livemode).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("  PaymentSources: ").Append(PaymentSources).Append("\n");
            sb.Append("  Phone: ").Append(Phone).Append("\n");
            sb.Append("  FiscalEntities: ").Append(FiscalEntities).Append("\n");
            sb.Append("  ShippingContacts: ").Append(ShippingContacts).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CustomersDataResponse);
        }

        /// <summary>
        /// Returns true if CustomersDataResponse instances are equal
        /// </summary>
        /// <param name="input">Instance of CustomersDataResponse to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CustomersDataResponse input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AntifraudInfo == input.AntifraudInfo ||
                    (this.AntifraudInfo != null &&
                    this.AntifraudInfo.Equals(input.AntifraudInfo))
                ) && 
                (
                    this.Corporate == input.Corporate ||
                    this.Corporate.Equals(input.Corporate)
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    this.CreatedAt.Equals(input.CreatedAt)
                ) && 
                (
                    this.CustomReference == input.CustomReference ||
                    (this.CustomReference != null &&
                    this.CustomReference.Equals(input.CustomReference))
                ) && 
                (
                    this.DefaultFiscalEntityId == input.DefaultFiscalEntityId ||
                    (this.DefaultFiscalEntityId != null &&
                    this.DefaultFiscalEntityId.Equals(input.DefaultFiscalEntityId))
                ) && 
                (
                    this.DefaultShippingContactId == input.DefaultShippingContactId ||
                    (this.DefaultShippingContactId != null &&
                    this.DefaultShippingContactId.Equals(input.DefaultShippingContactId))
                ) && 
                (
                    this.DefaultPaymentSourceId == input.DefaultPaymentSourceId ||
                    (this.DefaultPaymentSourceId != null &&
                    this.DefaultPaymentSourceId.Equals(input.DefaultPaymentSourceId))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Livemode == input.Livemode ||
                    this.Livemode.Equals(input.Livemode)
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Object == input.Object ||
                    (this.Object != null &&
                    this.Object.Equals(input.Object))
                ) && 
                (
                    this.PaymentSources == input.PaymentSources ||
                    (this.PaymentSources != null &&
                    this.PaymentSources.Equals(input.PaymentSources))
                ) && 
                (
                    this.Phone == input.Phone ||
                    (this.Phone != null &&
                    this.Phone.Equals(input.Phone))
                ) && 
                (
                    this.FiscalEntities == input.FiscalEntities ||
                    (this.FiscalEntities != null &&
                    this.FiscalEntities.Equals(input.FiscalEntities))
                ) && 
                (
                    this.ShippingContacts == input.ShippingContacts ||
                    (this.ShippingContacts != null &&
                    this.ShippingContacts.Equals(input.ShippingContacts))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AntifraudInfo != null)
                {
                    hashCode = (hashCode * 59) + this.AntifraudInfo.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Corporate.GetHashCode();
                hashCode = (hashCode * 59) + this.CreatedAt.GetHashCode();
                if (this.CustomReference != null)
                {
                    hashCode = (hashCode * 59) + this.CustomReference.GetHashCode();
                }
                if (this.DefaultFiscalEntityId != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultFiscalEntityId.GetHashCode();
                }
                if (this.DefaultShippingContactId != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultShippingContactId.GetHashCode();
                }
                if (this.DefaultPaymentSourceId != null)
                {
                    hashCode = (hashCode * 59) + this.DefaultPaymentSourceId.GetHashCode();
                }
                if (this.Email != null)
                {
                    hashCode = (hashCode * 59) + this.Email.GetHashCode();
                }
                if (this.Id != null)
                {
                    hashCode = (hashCode * 59) + this.Id.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Livemode.GetHashCode();
                if (this.Name != null)
                {
                    hashCode = (hashCode * 59) + this.Name.GetHashCode();
                }
                if (this.Object != null)
                {
                    hashCode = (hashCode * 59) + this.Object.GetHashCode();
                }
                if (this.PaymentSources != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentSources.GetHashCode();
                }
                if (this.Phone != null)
                {
                    hashCode = (hashCode * 59) + this.Phone.GetHashCode();
                }
                if (this.FiscalEntities != null)
                {
                    hashCode = (hashCode * 59) + this.FiscalEntities.GetHashCode();
                }
                if (this.ShippingContacts != null)
                {
                    hashCode = (hashCode * 59) + this.ShippingContacts.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
