/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Conekta.net.Client.OpenAPIDateConverter;

namespace Conekta.net.Model
{
    /// <summary>
    /// contains the following attributes that will guide to continue the flow
    /// </summary>
    [DataContract(Name = "order_next_action_response_redirect_to_url")]
    public partial class OrderNextActionResponseRedirectToUrl : IEquatable<OrderNextActionResponseRedirectToUrl>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="OrderNextActionResponseRedirectToUrl" /> class.
        /// </summary>
        /// <param name="url">pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2..</param>
        /// <param name="returnUrl">Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected..</param>
        public OrderNextActionResponseRedirectToUrl(string url = default(string), string returnUrl = default(string))
        {
            this.Url = url;
            this.ReturnUrl = returnUrl;
        }

        /// <summary>
        /// pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.
        /// </summary>
        /// <value>pay.conekta.com/{id} Indicates the url of the Conekta component to authenticate the flow through 3DS2.</value>
        /// <example>https://pay.conekta.com/6fca054a85194c43971ecea35cc519bb</example>
        [DataMember(Name = "url", EmitDefaultValue = false)]
        public string Url { get; set; }

        /// <summary>
        /// Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.
        /// </summary>
        /// <value>Indicates the url to which the 3DS2 flow returns at the end, when the integration is redirected.</value>
        /// <example>https://my-website.com&quot;</example>
        [DataMember(Name = "return_url", EmitDefaultValue = false)]
        public string ReturnUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class OrderNextActionResponseRedirectToUrl {\n");
            sb.Append("  Url: ").Append(Url).Append("\n");
            sb.Append("  ReturnUrl: ").Append(ReturnUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as OrderNextActionResponseRedirectToUrl);
        }

        /// <summary>
        /// Returns true if OrderNextActionResponseRedirectToUrl instances are equal
        /// </summary>
        /// <param name="input">Instance of OrderNextActionResponseRedirectToUrl to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(OrderNextActionResponseRedirectToUrl input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.Url == input.Url ||
                    (this.Url != null &&
                    this.Url.Equals(input.Url))
                ) && 
                (
                    this.ReturnUrl == input.ReturnUrl ||
                    (this.ReturnUrl != null &&
                    this.ReturnUrl.Equals(input.ReturnUrl))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Url != null)
                {
                    hashCode = (hashCode * 59) + this.Url.GetHashCode();
                }
                if (this.ReturnUrl != null)
                {
                    hashCode = (hashCode * 59) + this.ReturnUrl.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
