/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Conekta.net.Client.OpenAPIDateConverter;

namespace Conekta.net.Model
{
    /// <summary>
    /// ResendRequest
    /// </summary>
    [DataContract(Name = "resend_request")]
    public partial class ResendRequest : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ResendRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ResendRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ResendRequest" /> class.
        /// </summary>
        /// <param name="webhooksIds">webhooks ids to resend event (required).</param>
        public ResendRequest(List<string> webhooksIds = default(List<string>))
        {
            // to ensure "webhooksIds" is required (not null)
            if (webhooksIds == null)
            {
                throw new ArgumentNullException("webhooksIds is a required property for ResendRequest and cannot be null");
            }
            this.WebhooksIds = webhooksIds;
        }

        /// <summary>
        /// webhooks ids to resend event
        /// </summary>
        /// <value>webhooks ids to resend event</value>
        /*
        <example>[&quot;6307a60c41de27127515a575&quot;,&quot;6307a60c41de27127515a571&quot;]</example>
        */
        [DataMember(Name = "webhooks_ids", IsRequired = true, EmitDefaultValue = true)]
        public List<string> WebhooksIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ResendRequest {\n");
            sb.Append("  WebhooksIds: ").Append(WebhooksIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
