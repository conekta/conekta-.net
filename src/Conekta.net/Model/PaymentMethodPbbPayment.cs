/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Conekta.net.Client.OpenAPIDateConverter;

namespace Conekta.net.Model
{
    /// <summary>
    /// PaymentMethodPbbPayment
    /// </summary>
    [DataContract(Name = "payment_method_pbb_payment")]
    public partial class PaymentMethodPbbPayment : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentMethodPbbPayment" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PaymentMethodPbbPayment() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PaymentMethodPbbPayment" /> class.
        /// </summary>
        /// <param name="type">type.</param>
        /// <param name="varObject">varObject (required).</param>
        /// <param name="deepLink">Deep link for the payment, use for mobile apps/flows (required).</param>
        /// <param name="expiresAt">Expiration date of the charge (required).</param>
        /// <param name="productType">Product type of the charge (required).</param>
        /// <param name="redirectUrl">URL to redirect the customer to complete the payment (required).</param>
        /// <param name="reference">Reference for the payment (required).</param>
        public PaymentMethodPbbPayment(string type = default(string), string varObject = default(string), string deepLink = default(string), long expiresAt = default(long), string productType = default(string), string redirectUrl = default(string), string reference = default(string))
        {
            // to ensure "varObject" is required (not null)
            if (varObject == null)
            {
                throw new ArgumentNullException("varObject is a required property for PaymentMethodPbbPayment and cannot be null");
            }
            this.Object = varObject;
            // to ensure "deepLink" is required (not null)
            if (deepLink == null)
            {
                throw new ArgumentNullException("deepLink is a required property for PaymentMethodPbbPayment and cannot be null");
            }
            this.DeepLink = deepLink;
            this.ExpiresAt = expiresAt;
            // to ensure "productType" is required (not null)
            if (productType == null)
            {
                throw new ArgumentNullException("productType is a required property for PaymentMethodPbbPayment and cannot be null");
            }
            this.ProductType = productType;
            // to ensure "redirectUrl" is required (not null)
            if (redirectUrl == null)
            {
                throw new ArgumentNullException("redirectUrl is a required property for PaymentMethodPbbPayment and cannot be null");
            }
            this.RedirectUrl = redirectUrl;
            // to ensure "reference" is required (not null)
            if (reference == null)
            {
                throw new ArgumentNullException("reference is a required property for PaymentMethodPbbPayment and cannot be null");
            }
            this.Reference = reference;
            this.Type = type;
        }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets Object
        /// </summary>
        /*
        <example>payment_source</example>
        */
        [DataMember(Name = "object", IsRequired = true, EmitDefaultValue = true)]
        public string Object { get; set; }

        /// <summary>
        /// Deep link for the payment, use for mobile apps/flows
        /// </summary>
        /// <value>Deep link for the payment, use for mobile apps/flows</value>
        /*
        <example>https://mgm.bbva.mx/WA3b/pbb?AGREEMENT&#x3D;002484374&amp;AMOUNT&#x3D;1&amp;CONCEPT&#x3D;PagoDirecto&amp;CURRENCY&#x3D;MXN&amp;REFERENCE&#x3D;22277523174328893295</example>
        */
        [DataMember(Name = "deep_link", IsRequired = true, EmitDefaultValue = true)]
        public string DeepLink { get; set; }

        /// <summary>
        /// Expiration date of the charge
        /// </summary>
        /// <value>Expiration date of the charge</value>
        /*
        <example>1683053729</example>
        */
        [DataMember(Name = "expires_at", IsRequired = true, EmitDefaultValue = true)]
        public long ExpiresAt { get; set; }

        /// <summary>
        /// Product type of the charge
        /// </summary>
        /// <value>Product type of the charge</value>
        [DataMember(Name = "product_type", IsRequired = true, EmitDefaultValue = true)]
        public string ProductType { get; set; }

        /// <summary>
        /// URL to redirect the customer to complete the payment
        /// </summary>
        /// <value>URL to redirect the customer to complete the payment</value>
        /*
        <example>https://example.com/redirect</example>
        */
        [DataMember(Name = "redirect_url", IsRequired = true, EmitDefaultValue = true)]
        public string RedirectUrl { get; set; }

        /// <summary>
        /// Reference for the payment
        /// </summary>
        /// <value>Reference for the payment</value>
        /*
        <example>22277523174328893295</example>
        */
        [DataMember(Name = "reference", IsRequired = true, EmitDefaultValue = true)]
        public string Reference { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PaymentMethodPbbPayment {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  Object: ").Append(Object).Append("\n");
            sb.Append("  DeepLink: ").Append(DeepLink).Append("\n");
            sb.Append("  ExpiresAt: ").Append(ExpiresAt).Append("\n");
            sb.Append("  ProductType: ").Append(ProductType).Append("\n");
            sb.Append("  RedirectUrl: ").Append(RedirectUrl).Append("\n");
            sb.Append("  Reference: ").Append(Reference).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ExpiresAt (long) minimum
            if (this.ExpiresAt < (long)0)
            {
                yield return new ValidationResult("Invalid value for ExpiresAt, must be a value greater than 0.", new [] { "ExpiresAt" });
            }

            yield break;
        }
    }

}
