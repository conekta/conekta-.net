/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Conekta.net.Client.OpenAPIDateConverter;

namespace Conekta.net.Model
{
    /// <summary>
    /// Commercial information for the company.
    /// </summary>
    [DataContract(Name = "create_company_request_comercial_info")]
    public partial class CreateCompanyRequestComercialInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateCompanyRequestComercialInfo" /> class.
        /// </summary>
        /// <param name="website">The company&#39;s website URL..</param>
        /// <param name="mcc">The Merchant Category Code (MCC) for the company..</param>
        /// <param name="merchantSupportEmail">Email address for merchant support..</param>
        /// <param name="merchantSupportPhone">Phone number for merchant support..</param>
        public CreateCompanyRequestComercialInfo(string website = default(string), string mcc = default(string), string merchantSupportEmail = default(string), string merchantSupportPhone = default(string))
        {
            this.Website = website;
            this.Mcc = mcc;
            this.MerchantSupportEmail = merchantSupportEmail;
            this.MerchantSupportPhone = merchantSupportPhone;
        }

        /// <summary>
        /// The company&#39;s website URL.
        /// </summary>
        /// <value>The company&#39;s website URL.</value>
        /*
        <example>http://www.test.com</example>
        */
        [DataMember(Name = "website", EmitDefaultValue = false)]
        public string Website { get; set; }

        /// <summary>
        /// The Merchant Category Code (MCC) for the company.
        /// </summary>
        /// <value>The Merchant Category Code (MCC) for the company.</value>
        /*
        <example>5812</example>
        */
        [DataMember(Name = "mcc", EmitDefaultValue = false)]
        public string Mcc { get; set; }

        /// <summary>
        /// Email address for merchant support.
        /// </summary>
        /// <value>Email address for merchant support.</value>
        /*
        <example>test@test.com</example>
        */
        [DataMember(Name = "merchant_support_email", EmitDefaultValue = false)]
        public string MerchantSupportEmail { get; set; }

        /// <summary>
        /// Phone number for merchant support.
        /// </summary>
        /// <value>Phone number for merchant support.</value>
        /*
        <example>5300000000</example>
        */
        [DataMember(Name = "merchant_support_phone", EmitDefaultValue = false)]
        public string MerchantSupportPhone { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateCompanyRequestComercialInfo {\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("  Mcc: ").Append(Mcc).Append("\n");
            sb.Append("  MerchantSupportEmail: ").Append(MerchantSupportEmail).Append("\n");
            sb.Append("  MerchantSupportPhone: ").Append(MerchantSupportPhone).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
