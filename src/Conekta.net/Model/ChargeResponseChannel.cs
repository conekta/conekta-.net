/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Conekta.net.Client.OpenAPIDateConverter;

namespace Conekta.net.Model
{
    /// <summary>
    /// ChargeResponseChannel
    /// </summary>
    [DataContract(Name = "charge_response_channel")]
    public partial class ChargeResponseChannel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ChargeResponseChannel" /> class.
        /// </summary>
        /// <param name="segment">segment.</param>
        /// <param name="checkoutRequestId">checkoutRequestId.</param>
        /// <param name="checkoutRequestType">checkoutRequestType.</param>
        /// <param name="id">id.</param>
        public ChargeResponseChannel(string segment = default(string), string checkoutRequestId = default(string), string checkoutRequestType = default(string), string id = default(string))
        {
            this.Segment = segment;
            this.CheckoutRequestId = checkoutRequestId;
            this.CheckoutRequestType = checkoutRequestType;
            this.Id = id;
        }

        /// <summary>
        /// Gets or Sets Segment
        /// </summary>
        /*
        <example>Checkout</example>
        */
        [DataMember(Name = "segment", EmitDefaultValue = false)]
        public string Segment { get; set; }

        /// <summary>
        /// Gets or Sets CheckoutRequestId
        /// </summary>
        /*
        <example>6fca054a-8519-4c43-971e-cea35cc519bb</example>
        */
        [DataMember(Name = "checkout_request_id", EmitDefaultValue = false)]
        public string CheckoutRequestId { get; set; }

        /// <summary>
        /// Gets or Sets CheckoutRequestType
        /// </summary>
        /*
        <example>HostedPayment</example>
        */
        [DataMember(Name = "checkout_request_type", EmitDefaultValue = false)]
        public string CheckoutRequestType { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        /*
        <example>channel_2tNDzhA4Akmzj11AU</example>
        */
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ChargeResponseChannel {\n");
            sb.Append("  Segment: ").Append(Segment).Append("\n");
            sb.Append("  CheckoutRequestId: ").Append(CheckoutRequestId).Append("\n");
            sb.Append("  CheckoutRequestType: ").Append(CheckoutRequestType).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
