/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using Xunit;

using Conekta.net.Client;
using Conekta.net.Api;
using Conekta.net.Model;

namespace Conekta.net.Test.Api
{
    /// <summary>
    ///  Class for testing TokensApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TokensApiTests 
    {
        private readonly TokensApi _tokensApi;

        public TokensApiTests()
        {
            Configuration configuration = new Configuration()
            {
                BasePath = BaseTest.BasePath,
                AccessToken = "key_uMxL6X1txuxyzQzJEXt72Aaaa"
            };
            _tokensApi = new TokensApi(configuration);
        }

        /// <summary>
        /// Test an instance of TokensApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsType<TokensApi>(_tokensApi);
        }

        /// <summary>
        /// Test CreateToken
        /// </summary>
        [Fact]
        public void CreateTokenTest()
        {
            Token token = new Token(
                card: new TokenCard(
                    name: "Jorge LÃ³pez",
                    expMonth: "12",
                    expYear: "25",
                    cvc: "123",
                    number: "5475040095304607"
                )
            );
            var response = _tokensApi.CreateToken(token);

            Assert.IsType<TokenResponse>(response);
            Assert.False(response.Used);
            Assert.True(response.Livemode);
            Assert.Equal("tok_2toPJUcZ27AH5LsZk", response.Id);
            Assert.Null(response.Checkout);
        }
        /// <summary>
        /// Test CreateToken
        /// </summary>
        [Fact]
        public void CreateEmptyTokenTest()
        {
            Token token = new Token(
               checkout: new TokenCheckout( returnsControlOn: "Token")
            );
            var response = _tokensApi.CreateToken(token);

            Assert.IsType<TokenResponse>(response);
            Assert.NotNull(response.Checkout);
            Assert.Equal("Issued", response.Checkout.Status);
            Assert.Equal("tok_2toNoPZpJgRU4PvgZ", response.Id);
        }
    }
}
