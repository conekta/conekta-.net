/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Conekta.net.Client;
using Conekta.net.Api;
// uncomment below to import models
//using Conekta.net.Model;

namespace Conekta.net.Test.Api
{
    /// <summary>
    ///  Class for testing AntifraudApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class AntifraudApiTests : IDisposable
    {
        private AntifraudApi instance;

        public AntifraudApiTests()
        {
            instance = new AntifraudApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AntifraudApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' AntifraudApi
            //Assert.IsType<AntifraudApi>(instance);
        }

        /// <summary>
        /// Test CreateNewBlacklistRule
        /// </summary>
        [Fact]
        public void CreateNewBlacklistRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRiskRulesData createRiskRulesData = null;
            //var response = instance.CreateNewBlacklistRule(createRiskRulesData);
            //Assert.IsType<BlacklistRuleResponse>(response);
        }

        /// <summary>
        /// Test CreateNewRuleWhitelist
        /// </summary>
        [Fact]
        public void CreateNewRuleWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRiskRulesData createRiskRulesData = null;
            //var response = instance.CreateNewRuleWhitelist(createRiskRulesData);
            //Assert.IsType<Error>(response);
        }

        /// <summary>
        /// Test DeleteBlacklistRule
        /// </summary>
        [Fact]
        public void DeleteBlacklistRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string acceptLanguage = null;
            //var response = instance.DeleteBlacklistRule(id, acceptLanguage);
            //Assert.IsType<DeletedBlacklistRuleResponse>(response);
        }

        /// <summary>
        /// Test DeleteRuleWhitelist
        /// </summary>
        [Fact]
        public void DeleteRuleWhitelistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string acceptLanguage = null;
            //var response = instance.DeleteRuleWhitelist(id, acceptLanguage);
            //Assert.IsType<DeletedWhitelistRuleResponse>(response);
        }

        /// <summary>
        /// Test GetBlacklist
        /// </summary>
        [Fact]
        public void GetBlacklistTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetBlacklist();
            //Assert.IsType<RiskRulesList>(response);
        }

        /// <summary>
        /// Test GetWhiteList
        /// </summary>
        [Fact]
        public void GetWhiteListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetWhiteList();
            //Assert.IsType<RiskRulesList>(response);
        }
    }
}
