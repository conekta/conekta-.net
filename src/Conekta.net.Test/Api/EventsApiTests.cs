/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Conekta.net.Client;
using Conekta.net.Api;
// uncomment below to import models
//using Conekta.net.Model;

namespace Conekta.net.Test.Api
{
    /// <summary>
    ///  Class for testing EventsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class EventsApiTests : IDisposable
    {
        private EventsApi instance;

        public EventsApiTests()
        {
            instance = new EventsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EventsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' EventsApi
            //Assert.IsType<EventsApi>(instance);
        }

        /// <summary>
        /// Test GetEvent
        /// </summary>
        [Fact]
        public void GetEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //var response = instance.GetEvent(id, acceptLanguage, xChildCompanyId);
            //Assert.IsType<EventResponse>(response);
        }

        /// <summary>
        /// Test GetEvents
        /// </summary>
        [Fact]
        public void GetEventsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //int? limit = null;
            //string search = null;
            //string next = null;
            //string previous = null;
            //var response = instance.GetEvents(acceptLanguage, xChildCompanyId, limit, search, next, previous);
            //Assert.IsType<GetEventsResponse>(response);
        }

        /// <summary>
        /// Test ResendEvent
        /// </summary>
        [Fact]
        public void ResendEventTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string eventId = null;
            //ResendRequest resendRequest = null;
            //string acceptLanguage = null;
            //var response = instance.ResendEvent(eventId, resendRequest, acceptLanguage);
            //Assert.IsType<EventsResendResponse>(response);
        }
    }
}
