/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Conekta.net.Client;
using Conekta.net.Api;
// uncomment below to import models
//using Conekta.net.Model;

namespace Conekta.net.Test.Api
{
    /// <summary>
    ///  Class for testing PaymentLinkApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class PaymentLinkApiTests : IDisposable
    {
        private PaymentLinkApi instance;

        public PaymentLinkApiTests()
        {
            instance = new PaymentLinkApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PaymentLinkApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' PaymentLinkApi
            //Assert.IsType<PaymentLinkApi>(instance);
        }

        /// <summary>
        /// Test CancelCheckout
        /// </summary>
        [Fact]
        public void CancelCheckoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //var response = instance.CancelCheckout(id, acceptLanguage, xChildCompanyId);
            //Assert.IsType<CheckoutResponse>(response);
        }

        /// <summary>
        /// Test CreateCheckout
        /// </summary>
        [Fact]
        public void CreateCheckoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Checkout checkout = null;
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //var response = instance.CreateCheckout(checkout, acceptLanguage, xChildCompanyId);
            //Assert.IsType<CheckoutResponse>(response);
        }

        /// <summary>
        /// Test EmailCheckout
        /// </summary>
        [Fact]
        public void EmailCheckoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //EmailCheckoutRequest emailCheckoutRequest = null;
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //var response = instance.EmailCheckout(id, emailCheckoutRequest, acceptLanguage, xChildCompanyId);
            //Assert.IsType<CheckoutResponse>(response);
        }

        /// <summary>
        /// Test GetCheckout
        /// </summary>
        [Fact]
        public void GetCheckoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //var response = instance.GetCheckout(id, acceptLanguage, xChildCompanyId);
            //Assert.IsType<CheckoutResponse>(response);
        }

        /// <summary>
        /// Test GetCheckouts
        /// </summary>
        [Fact]
        public void GetCheckoutsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //int? limit = null;
            //string search = null;
            //string next = null;
            //string previous = null;
            //var response = instance.GetCheckouts(acceptLanguage, xChildCompanyId, limit, search, next, previous);
            //Assert.IsType<CheckoutsResponse>(response);
        }

        /// <summary>
        /// Test SmsCheckout
        /// </summary>
        [Fact]
        public void SmsCheckoutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //SmsCheckoutRequest smsCheckoutRequest = null;
            //string acceptLanguage = null;
            //string xChildCompanyId = null;
            //var response = instance.SmsCheckout(id, smsCheckoutRequest, acceptLanguage, xChildCompanyId);
            //Assert.IsType<CheckoutResponse>(response);
        }
    }
}
