/*
 * Conekta API
 *
 * Conekta sdk
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: engineering@conekta.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using Xunit;

using Conekta.net.Api;
using Conekta.net.Client;
using Conekta.net.Model;

namespace Conekta.net.Test.Api
{
    /// <summary>
    ///  Class for testing TransactionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class TransactionsApiTests
    {
        private readonly TransactionsApi _instance;

        public TransactionsApiTests()
        {
            Configuration configuration = new Configuration()
            {
                BasePath = BaseTest.BasePath,
                AccessToken = "key_uMxL6X1txuxyzQzJEXt72Aaaa"
            };
            _instance = new TransactionsApi(configuration);
        }

        /// <summary>
        /// Test an instance of TransactionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            Assert.IsType<TransactionsApi>(_instance);
        }

        /// <summary>
        /// Test GetTransaction
        /// </summary>
        [Fact]
        public void GetTransactionTest()
        {
            const string id = "6456b6dfac0fd40001a64eb8";
            var response = _instance.GetTransaction(id);
            
            Assert.IsType<TransactionResponse>(response);
            Assert.Equal(id, response.Id);
            Assert.Equal("transaction", response.Object);
        }

        /// <summary>
        /// Test GetTransactions
        /// </summary>
        [Fact]
        public void GetTransactionsTest()
        {
            var response = _instance.GetTransactions(limit:2);
            
            Assert.IsType<GetTransactionsResponse>(response);
            Assert.True(response.HasMore);
            Assert.NotNull(response.NextPageUrl);
            Assert.Null(response.PreviousPageUrl);
            Assert.StrictEqual(2, response.Data.Count);
            Assert.Equal("644acceb0a49bb001b2a04aa", response.Data[0].Id);
            Assert.Equal("644ac60691882d001bec62b3", response.Data[1].Id);
        }
    }
}
